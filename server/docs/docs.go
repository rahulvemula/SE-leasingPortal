// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/apartments": {
            "get": {
                "description": "Get details of all apartments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apartments"
                ],
                "summary": "Get details of all apartments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Apartment"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new apartment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apartments"
                ],
                "summary": "Create an apartment",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.ApartmentPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Apartment"
                            }
                        }
                    }
                }
            }
        },
        "/apartments/{apartmentId}": {
            "get": {
                "description": "Get details of the apartments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apartments"
                ],
                "summary": "Get details of the apartments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "apartmentId",
                        "name": "apartmentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Apartment"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update the existing apartment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apartments"
                ],
                "summary": "Update apartment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "apartmentId",
                        "name": "apartmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.ApartmentPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Apartment"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the existing apartment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apartments"
                ],
                "summary": "Delete apartment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "apartmentId",
                        "name": "apartmentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Apartment"
                            }
                        }
                    }
                }
            }
        },
        "/complaints": {
            "get": {
                "description": "Get details of all complaints",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "complaints"
                ],
                "summary": "Get details of all complaints",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Complaint"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new complaint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "complaints"
                ],
                "summary": "Create complaint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Complaint"
                            }
                        }
                    }
                }
            }
        },
        "/complaints/user/{userId}": {
            "get": {
                "description": "Get details of complaint made by a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "complaints"
                ],
                "summary": "Get all complaints of user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "userId",
                        "name": "leaseId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Complaint"
                            }
                        }
                    }
                }
            }
        },
        "/complaints/{complaintId}": {
            "get": {
                "description": "Get details of complaint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "complaints"
                ],
                "summary": "Get details of complaint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "complaintId",
                        "name": "leaseId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Complaint"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the existing complaint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "complaints"
                ],
                "summary": "Delete complaint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Complaint"
                            }
                        }
                    }
                }
            }
        },
        "/leases": {
            "get": {
                "description": "Get details of all leases",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leases"
                ],
                "summary": "Get details of all leases",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Lease"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new lease",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leases"
                ],
                "summary": "Create lease",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LeasePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Lease"
                            }
                        }
                    }
                }
            }
        },
        "/leases/{leaseId}": {
            "get": {
                "description": "Get details of leases",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leases"
                ],
                "summary": "Get details lease",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "leaseId",
                        "name": "leaseId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Lease"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update the existing lease",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leases"
                ],
                "summary": "Update lease",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "leaseId",
                        "name": "leaseId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LeasePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Lease"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the existing lease",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leases"
                ],
                "summary": "Delete lease",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Lease"
                            }
                        }
                    }
                }
            }
        },
        "/listings": {
            "get": {
                "description": "Get details of all listings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "listings"
                ],
                "summary": "Get details of all listings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Listing"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new listing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "listings"
                ],
                "summary": "Create listings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.ListingPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Listing"
                            }
                        }
                    }
                }
            }
        },
        "/listings/{listingId}": {
            "get": {
                "description": "Get details of the listing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "listings"
                ],
                "summary": "Get details of listing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "listingId",
                        "name": "leaseId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Listing"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update the existing listing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "listings"
                ],
                "summary": "Update listing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.ListingPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Listing"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the existing lease",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "listings"
                ],
                "summary": "Delete listings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Listing"
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Create a new token with the input paylod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login"
                ],
                "summary": "Create a new token",
                "parameters": [
                    {
                        "description": "Create token",
                        "name": "creds",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Payload"
                        }
                    }
                }
            }
        },
        "/societies": {
            "get": {
                "description": "Get details of all societies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "societies"
                ],
                "summary": "Get details of all societies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Society"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new society",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "societies"
                ],
                "summary": "Create society",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.SocietyPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Society"
                            }
                        }
                    }
                }
            }
        },
        "/societies/{societyId}": {
            "get": {
                "description": "Get details of the society",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "societies"
                ],
                "summary": "Get details of the society",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "societyId",
                        "name": "societyId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Society"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update the existing society",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "societies"
                ],
                "summary": "Update society",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.SocietyPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Society"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the existing society",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "societies"
                ],
                "summary": "Delete society",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Society"
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get details of all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get details of all users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Get a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UserPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    }
                }
            }
        },
        "/users/{email}": {
            "get": {
                "description": "Get details of user by email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get details of the user by email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "put": {
                "description": "Update the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update the new",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "userId",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UserPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the existing user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token header",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "userId",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.ApartmentPayload": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amenities": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "controllers.Credentials": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controllers.LeasePayload": {
            "type": "object",
            "properties": {
                "leaseEndDate": {
                    "type": "string"
                },
                "leaseStartDate": {
                    "type": "string"
                },
                "listingId": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "controllers.ListingPayload": {
            "type": "object",
            "properties": {
                "houseType": {
                    "type": "string"
                },
                "isleased": {
                    "type": "boolean"
                },
                "listingImg": {
                    "type": "string"
                },
                "listingType": {
                    "type": "string"
                },
                "rent": {
                    "type": "integer"
                },
                "societyId": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "controllers.Payload": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "controllers.SocietyPayload": {
            "type": "object",
            "properties": {
                "societyAddress": {
                    "type": "string"
                },
                "societyAmenities": {
                    "type": "string"
                },
                "societyCity": {
                    "type": "string"
                },
                "societyImg": {
                    "type": "string"
                },
                "societyName": {
                    "type": "string"
                }
            }
        },
        "controllers.UserPayload": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "models.Apartment": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amenities": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Complaint": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "models.Lease": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "leaseEndDate": {
                    "type": "string"
                },
                "leaseStartDate": {
                    "type": "string"
                },
                "listingId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "models.Listing": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "houseType": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isleased": {
                    "type": "boolean"
                },
                "listingImg": {
                    "type": "string"
                },
                "listingType": {
                    "type": "string"
                },
                "rent": {
                    "type": "integer"
                },
                "societyId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "models.Society": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "societyAddress": {
                    "type": "string"
                },
                "societyAmenities": {
                    "type": "string"
                },
                "societyCity": {
                    "type": "string"
                },
                "societyImg": {
                    "type": "string"
                },
                "societyName": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
